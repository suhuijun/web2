{"version":3,"sources":["Todolist/Todoing.js","Todolist/Todoinput.js","Todolist/Todoed.js","Todolist/Todolist.js","index.js"],"names":["Todoing","that","this","unfinished","props","to_do","map","item","idx","state","key","type","checked","onChange","changeTodo","title","onClick","delTodo","count_num","className","Component","Todoinput","handleInput","e","keyCode","addTodo","target","value","handleChange","setState","val","placeholder","onKeyDown","Todoed","finished","finish","Todolist","msg","msgjson","localStorage","setItem","JSON","stringify","delItem","a","splice","counting","changeItem","i","length","getItem","parse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50f9c780.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Todoing extends Component {\r\n    render() {\r\n        let that = this;\r\n        // unfinished 正在进行\r\n        let unfinished = this.props.to_do.map((item,idx)=>{\r\n            if(!item.state){\r\n                return(\r\n                    <p key={idx}>\r\n                        <input type=\"checkbox\" checked={item.state} onChange={()=>{that.props.changeTodo(idx)}}/>\r\n                        {item.title} <button onClick={()=>{that.props.delTodo(idx)}}>删除</button>\r\n                    </p>);\r\n            }\r\n            return null;\r\n        });\r\n    \r\n        return(\r\n            <div>\r\n                <div>\r\n                    <h1>正在进行</h1>\r\n                    <p>您还有{this.props.count_num}件任务没完成！</p>\r\n                    <ul className=\"list\">{unfinished}</ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            val: '请输入任务:)' //设置默认值\r\n        }\r\n    }\r\n    handleInput = (e)=>{\r\n        if(e.keyCode === 13){ //回车\r\n            this.props.addTodo(e.target.value);\r\n            e.target.value = '';\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            val: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input onChange={(e)=>this.handleChange(e)} placeholder={this.state.val} onKeyDown={(e)=>this.handleInput(e)} type=\"text\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Todoed extends Component {\r\n    render() {\r\n        let that = this;\r\n         // finished 已经完成事项的清单\r\n         let finished = this.props.to_do.map((item,idx)=>{\r\n            if(item.state){\r\n                return(\r\n                    <p key={idx}>\r\n                        <input type=\"checkbox\" checked={item.state} onChange={()=>{that.props.changeTodo(idx)}}/>\r\n                        {item.title} <button onClick={()=>{that.props.delTodo(idx)}}>删除</button>\r\n                    </p>);\r\n            }\r\n            return null;\r\n        });\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>已经完成</h1>\r\n                    <p>已经完成{this.props.finish}件任务了!</p>\r\n                    <ul className=\"list\">{finished}</ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Todoing from './Todoing';\r\nimport Todoinput from './Todoinput';\r\nimport Todoed from './Todoed';\r\n\r\nexport default class Todolist extends Component {\r\n    //初始化\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            to_do: localStorage.getItem(\"todolist\")? JSON.parse(localStorage.getItem(\"todolist\")):[],\r\n            finish: 0,\r\n            count_num: 0\r\n            \r\n        }\r\n    }\r\n\r\n    //读存储\r\n    componentWillMount(){\r\n        this.counting();\r\n    }\r\n\r\n    // 添加TODO\r\n    addTodo = (msg)=>{\r\n        var msgjson = {\r\n            title: msg,\r\n            state: false\r\n        }\r\n        var to_do = [...this.state.to_do, msgjson];\r\n        this.setState({ // 注意异步操作\r\n            to_do: to_do,\r\n            count_num: this.state.count_num+1\r\n        },()=>{\r\n            localStorage.setItem(\"todolist\", JSON.stringify(to_do));\r\n        })\r\n    }\r\n\r\n    // 删除TODO\r\n    delItem = (a)=>{\r\n        var to_do = [...this.state.to_do];\r\n        \r\n        to_do.splice(a,1);\r\n        this.setState({\r\n            to_do:to_do\r\n        },()=>{\r\n            this.counting();\r\n            localStorage.setItem(\"todolist\", JSON.stringify(to_do));\r\n        });\r\n    }\r\n\r\n    // 改变状态\r\n    changeItem = (a) =>{\r\n        var to_do = [...this.state.to_do];\r\n        to_do[a].state = !to_do[a].state;\r\n        this.setState({\r\n            to_do:to_do\r\n        },()=>{\r\n            this.counting();\r\n            localStorage.setItem(\"todolist\", JSON.stringify(to_do));\r\n        })\r\n    }\r\n\r\n    counting = () =>{\r\n        var count_num = 0;\r\n        var finish = 0;\r\n        var to_do = this.state.to_do;\r\n        for(var i = 0; i < to_do.length; i++){\r\n            if(!to_do[i].state){\r\n                count_num++;\r\n            }else{\r\n                finish++;\r\n            }\r\n        };\r\n        this.setState({\r\n            count_num: count_num,\r\n            finish: finish\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput addTodo={this.addTodo}/>\r\n                <Todoing to_do={this.state.to_do} count_num={this.state.count_num} finish={this.state.finish} delTodo={this.delItem} changeTodo={this.changeItem}/>\r\n                <Todoed to_do={this.state.to_do} delTodo={this.delItem} changeTodo={this.changeItem} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todolist from './Todolist/Todolist';\nimport './index.css';\n\nReactDOM.render(<Todolist/>, document.getElementById('root'));\n"],"sourceRoot":""}